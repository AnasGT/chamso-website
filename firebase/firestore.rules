rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Basic user validation
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if user is a teacher
    function isTeacher() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Classes collection - Allow read/write for all authenticated users
    match /classes/{classId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Attendance collection
    match /attendance/{attendanceId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Notes collection
    match /notes/{noteId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Schema collection (protected)
    match /_schema/{schemaId} {
      allow read: if isAuthenticated();
      allow write: if isTeacher();
    }
  }
}
